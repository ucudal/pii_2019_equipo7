// <auto-generated />
using System;
using IgnisMercado.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IgnisMercado.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("IgnisMercado.Areas.Identity.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("DOB");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("Role");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("IgnisMercado.Models.AsiganrTecnico", b =>
                {
                    b.Property<int>("TecnicoID");

                    b.Property<int>("PropuestaID");

                    b.Property<int>("PropuestaID1");

                    b.HasKey("TecnicoID", "PropuestaID");

                    b.HasAlternateKey("PropuestaID", "TecnicoID");

                    b.HasIndex("PropuestaID1");

                    b.ToTable("AsiganrTecnico");
                });

            modelBuilder.Entity("IgnisMercado.Models.Empresa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contacto");

                    b.Property<string>("CorreoElectronico");

                    b.Property<string>("Descricpion");

                    b.Property<string>("Director");

                    b.Property<string>("Nombre");

                    b.HasKey("ID");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("IgnisMercado.Models.Propuesta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CostoEstimado");

                    b.Property<string>("DescripcionDeLaPropuesta");

                    b.Property<int?>("EmpresaID");

                    b.Property<string>("Estado");

                    b.Property<int>("EstimadoDeHora");

                    b.Property<DateTime>("FechaLimite");

                    b.Property<int>("Horas");

                    b.Property<string>("NivelDeDificutad");

                    b.Property<int?>("TecnicoAsignadoID");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("TecnicoAsignadoID");

                    b.ToTable("Propuesta");
                });

            modelBuilder.Entity("IgnisMercado.Models.Puesto", b =>
                {
                    b.Property<int>("PropuestaID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("PropuestaID1");

                    b.Property<string>("TrabajoName");

                    b.HasKey("PropuestaID");

                    b.HasIndex("PropuestaID1");

                    b.ToTable("Puesto");
                });

            modelBuilder.Entity("IgnisMercado.Models.Tecnico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contacto");

                    b.Property<string>("CorreoElectronico");

                    b.Property<int>("Edad");

                    b.Property<string>("NivelEducativo");

                    b.Property<string>("Nombre");

                    b.HasKey("ID");

                    b.ToTable("Tecnico");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("IgnisMercado.Models.AsiganrTecnico", b =>
                {
                    b.HasOne("IgnisMercado.Models.Propuesta", "Propuesta")
                        .WithMany()
                        .HasForeignKey("PropuestaID1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IgnisMercado.Models.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IgnisMercado.Models.Propuesta", b =>
                {
                    b.HasOne("IgnisMercado.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");

                    b.HasOne("IgnisMercado.Models.Tecnico", "TecnicoAsignado")
                        .WithMany()
                        .HasForeignKey("TecnicoAsignadoID");
                });

            modelBuilder.Entity("IgnisMercado.Models.Puesto", b =>
                {
                    b.HasOne("IgnisMercado.Models.Propuesta", "Propuesta")
                        .WithMany()
                        .HasForeignKey("PropuestaID1");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("IgnisMercado.Areas.Identity.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("IgnisMercado.Areas.Identity.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IgnisMercado.Areas.Identity.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("IgnisMercado.Areas.Identity.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
